<sw:SWWindow
     x:Class="EventManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sw="clr-namespace:SourceWeave.Controls;assembly=SourceWeave.Controls"
        xmlns:local="clr-namespace:EventManager"
        xmlns:viewmodels="clr-namespace:EventManager.ViewModels"
        xmlns:views="clr-namespace:EventManager.Views"
        mc:Ignorable="d"
        Title="{Binding dataModel.UserName}" Height="540" Width="960" ResizeMode="CanMinimize"
        WindowStartupLocation="CenterScreen" Icon="Webp.net-resizeimage (3).png"
        WindowState="Maximized" Closing="SWWindow_Closing">
    <Window.DataContext>
        <viewmodels:MainViewModel/>
    </Window.DataContext>
    <!--Views and ViewModels-->
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        <DataTemplate x:Name="LoginViewTemplate" DataType="{x:Type viewmodels:LoginViewModel}">
            <views:LoginView  DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="AppsViewTemplate" DataType="{x:Type viewmodels:AppsViewModel}">
            <views:AppsView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="CheckInViewTemplate" DataType="{x:Type viewmodels:CheckinViewModel}">
            <views:CheckInView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="ShopViewTemplate" DataType="{x:Type viewmodels:ShopViewModel}">
            <views:ShopView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="CampingViewTemplate" DataType="{x:Type viewmodels:CampingViewModel}">
            <views:CampingView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="CheckOutViewModel" DataType="{x:Type viewmodels:CheckOutViewModel}">
            <views:CheckOutView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="ConverterViewModel" DataType="{x:Type viewmodels:ConverterViewModel}">
            <views:ConverterView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="StatusViewModel" DataType="{x:Type viewmodels:StatusViewModel}">
            <views:StatusView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="LoanStandViewModel" DataType="{x:Type viewmodels:LoanStandViewModel}">
            <views:LoanStandView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="AdminViewModel" DataType="{x:Type viewmodels:AdminViewModel}">
            <views:AdminView DataContext="{Binding}"/>
        </DataTemplate>
        <DataTemplate x:Name="EmployeeViewModel" DataType="{x:Type viewmodels:EmployeeViewModel}">
            <views:EmployeeView DataContext="{Binding}"/>
        </DataTemplate>

        <!--SideBar animations-->
        <Storyboard x:Key="ExpandSideBar">

            <DoubleAnimation Duration="00:00:20" From="0" To="300" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="SideBar"/>

        </Storyboard>
    </Window.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        
        <!--Sidebar-->
        <Border Background="Gray" Grid.Column="0" Grid.Row="0" Grid.RowSpan="5" Name="SideBar" Visibility="Collapsed">
            <StackPanel>
                <!--Navigation-->
                <Button Content="Login"
                        Command="{Binding DataContext.ChangePageCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        CommandParameter="{Binding Login}"/>
                <Button Content="Apps"
                        Command="{Binding DataContext.ChangePageCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        CommandParameter="{Binding Apps}"/>
                <Button Content="Check in"
                        Command="{Binding DataContext.ChangePageCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        CommandParameter="{Binding  CheckIn}"/>
                <Button Content="Shop"
                        Command="{Binding DataContext.ChangePageCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        CommandParameter="{Binding Shop}"/>
                <Button Content="Camping"
                        Command="{Binding DataContext.ChangePageCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        CommandParameter="{Binding Camping}"/>
                <Button Content="Check Out"
                        Command="{Binding DataContext.ChangePageCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        CommandParameter="{Binding CheckOut}"/>
                <Button Content="Converter"
                        Command="{Binding DataContext.ChangePageCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        CommandParameter="{Binding Converter}"/>
                <Button Content="Status"
                        Command="{Binding DataContext.ChangePageCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        CommandParameter="{Binding Status}"/>
                <Button Content="Loan stand"
                        Command="{Binding DataContext.ChangePageCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        CommandParameter="{Binding LoanStand}"/>
                <Button Content="Admin" 
                        Command="{Binding DataContext.ChangePageCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        CommandParameter="{Binding Admin }"/>
                <Button Content="Employeee"
                        Command="{Binding DataContext.ChangePageCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                        CommandParameter="{Binding Employee}"/>
            </StackPanel>
        </Border>

        <!--Content-->
        <Border Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="4" Grid.RowSpan="5">
            <Border.Background>
                <ImageBrush ImageSource="Images/background.png"/>
            </Border.Background>
            <ContentControl Content="{Binding CurrentPageViewModel}">
            </ContentControl>
        </Border>
        <Border Background="White" Grid.Column="1" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="5" Visibility="{Binding CanSeeDisplay,Converter={StaticResource booleanToVisibilityConverter}}">
            <Viewbox>
                <Grid Width="900">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="300"/>
                        <RowDefinition Height="150"/>
                    </Grid.RowDefinitions>
                    <Viewbox>
                        <StackPanel DataContext="{Binding Display}" Grid.Row="0" VerticalAlignment="Center">
                            <Label Content="Can't connect to database" HorizontalContentAlignment="Center"/>
                            <Label Content="The system will attempt to reconnect in:" HorizontalContentAlignment="Center"/>
                            <TextBlock Text="{Binding Text}" Foreground="{Binding Color}" HorizontalAlignment="Center"/>
                        </StackPanel>
                    </Viewbox>
                    <Button Command="{Binding RetryConnectionCommand}" Grid.Row="1" Margin="10 10 10 50">
                        <Button.Template>
                            <ControlTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <fa:FontAwesome VerticalAlignment="Center" Icon="Refresh" FontSize="75"/>
                                    <TextBlock Text="Retry Connection" VerticalAlignment="Center" FontSize="50"/>
                                </StackPanel>
                            </ControlTemplate>
                        </Button.Template>
                        
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity"  Value="0.75"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Opacity"  Value="0.5"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Opacity"  Value="1"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Viewbox>

        </Border>

    </Grid>
</sw:SWWindow>
